Comment: State Machine used for text to speech workflow
Version: '1.0'
StartAt: MapInput
States:

  MapInput:
    Type: Pass
    Next: SendToTextract
    Parameters:
      id.$: "$.id"
      bucket.$: "$.detail.bucket.name"
      key.$: "$.detail.object.key"
      time.$: "$.time"
      region.$: "$.region"
    ResultPath: "$"
  SendToTextract:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    OutputPath: "$.Payload"
    Parameters:
      Payload.$: "$"
      FunctionName: ${SendToTextractFunction}
    Retry:
    - ErrorEquals:
      - Lambda.ServiceException
      - Lambda.AWSLambdaException
      - Lambda.SdkClientException
      IntervalSeconds: 2
      MaxAttempts: 6
      BackoffRate: 2
    Next: AnalyzeDocument
    Catch:
    - ErrorEquals:
      - States.ALL
      Comment: Catch Step Failure
      Next: Publish Fail
  Publish Fail:
    Type: Task
    Resource: arn:aws:states:::sns:publish
    Parameters:
      Message.$: "$"
      TopicArn: ${FailureTopic}
    Next: Fail
  Fail:
    Type: Fail

  AnalyzeDocument:
    Type: Task
    Next: Get Text Blocks
    
    
    Parameters:
      DocumentLocation:
        S3Object:
          Bucket.$: $.bucket
          Name.$: $.key
      OutputConfig:
        S3Bucket: ${TextractOutputBucket}
      NotificationChannel:
        SnsTopicArn: ${TextractTopic}
        RoleArn: ${TextractRole}
      FeatureTypes: []
    
    
    
    
    
    Resource: arn:aws:states:::aws-sdk:textract:startDocumentAnalysis
    Catch:
    - ErrorEquals:
      - States.ALL
      Next: Publish Fail
  Get Text Blocks:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    OutputPath: "$.Payload"
    Parameters:
      Payload.$: "$"
      FunctionName: ${ProcessTextFunction}
    Retry:
    - ErrorEquals:
      - Lambda.ServiceException
      - Lambda.AWSLambdaException
      - Lambda.SdkClientException
      IntervalSeconds: 2
      MaxAttempts: 6
      BackoffRate: 2
    Next: StartSpeechSynthesisTask
    Catch:
    - ErrorEquals:
      - States.ALL
      Next: Publish Fail
  StartSpeechSynthesisTask:
    Type: Task
    Next: Publish Metadata
    Parameters:
      OutputFormat: MyData
      OutputS3BucketName: MyData
      Text: MyData
      VoiceId: MyData
    Resource: arn:aws:states:::aws-sdk:polly:startSpeechSynthesisTask
    Catch:
    - ErrorEquals:
      - States.ALL
      Next: Publish Fail
  Publish Metadata:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    OutputPath: "$.Payload"
    Parameters:
      Payload.$: "$"
      FunctionName: ${PublishMetadataFunction}
    Retry:
    - ErrorEquals:
      - Lambda.ServiceException
      - Lambda.AWSLambdaException
      - Lambda.SdkClientException
      IntervalSeconds: 2
      MaxAttempts: 6
      BackoffRate: 2
    Next: Output Metadata
    Catch:
    - ErrorEquals:
      - States.ALL
      Next: Publish Fail
  Output Metadata:
    Type: Task
    Resource: arn:aws:states:::dynamodb:putItem
    Parameters:
      TableName: MyDynamoDBTable
      Item:
        Column:
          S: MyEntry
    Next: Publish Success
    Catch:
    - ErrorEquals:
      - States.ALL
      Next: Publish Fail
  Publish Success:
    Type: Task
    Resource: arn:aws:states:::sns:publish
    Parameters:
      Message.$: "$"
      TopicArn: ${SuccessTopic}
    Next: Success
    Catch:
    - ErrorEquals:
      - States.ALL
      Next: Publish Fail
  Success:
    Type: Succeed
