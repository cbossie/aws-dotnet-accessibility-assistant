AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for aws-dotnet-textract

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod
  OutputPrefix:
    Type: String
    Default: output
    MinLength: "1"
  SoundPrefix:
    Type: String
    Default: sounds/
    MinLength: "1"
  Voice:
    Type: String
    Default: Matthew

Globals:
  # Global attributes for each function
  Function:
    Timeout: 120
    Runtime: dotnet6
    MemorySize: 256
    Architectures:
      - arm64
    Environment:
      Variables:
        STAGE_NAME: !Ref Environment

Resources:
  #Functions Used for AI / ML
  SendToTextract:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SendToTextract
      CodeUri: ./src/ServerlessTextToSpeech.SendToTextract
      Handler: ServerlessTextToSpeech.SendToTextract
      Environment:
        Variables:
          TEXTRACT_ROLE: !GetAtt TextractRole.Arn
          TEXTRACT_TOPIC: !Ref TextractTopic
          OUTPUT_BUCKET: !Ref OutputBucket
          OUTPUT_PREFIX: !Ref OutputPrefix
      Policies:
        - arn:aws:iam::aws:policy/AmazonTextractFullAccess
        - S3CrudPolicy:
            BucketName: !Ref SourceBucket
        - S3CrudPolicy:
            BucketName: !Ref OutputBucket
        - !Ref DescribeTablePolicy
        - DynamoDBCrudPolicy:
            TableName: !Ref MetaDataTable

  ProcessTextAndSendToPolly:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ProcessTextAndSendToPolly
      CodeUri: ./src/ServerlessTextToSpeech.ProcessText
      Handler: ServerlessTextToSpeech.ProcessText
      Environment:
        Variables:
          SOUND_BUCKET: !Ref SoundBucket
          SOUND_PREFIX: !Ref SoundPrefix
          POLLY_TOPIC: !Ref PollyTopic
          POLLY_VOICE: !Ref Voice
      Policies:
        - arn:aws:iam::aws:policy/AmazonPollyFullAccess
        - S3CrudPolicy:
            BucketName: !Ref SoundBucket
        - arn:aws:iam::aws:policy/AmazonTextractFullAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref MetaDataTable
        - !Ref DescribeTablePolicy
        - SNSCrudPolicy:
            TopicName: !Ref PollyTopic
        - S3CrudPolicy:
            BucketName: !Ref OutputBucket
        ## TODO - Need to update this and remove
        - arn:aws:iam::aws:policy/AmazonSNSFullAccess

  #Callback Function for Textract Job
  NotifyTextractComplete:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: NotifyTextractComplete
      CodeUri: ./src/ServerlessTextToSpeech.CompleteTextract
      Handler: ServerlessTextToSpeech.CompleteTextract
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref MetaDataTable
        - SNSCrudPolicy:
            TopicName: !Ref TextractTopic
        - Statement:
            - Sid: StepFunctions
              Effect: Allow
              Action:
                - states:SendTaskSuccess
                - states:SendTaskFailure
                - states:SendTaskHeartbeat
              Resource: "*"
      Events:
        TextractTopicEvent:
          Type: SNS
          Properties:
            Topic: !Ref TextractTopic

  #Callback Function for Polly Job
  NotifyPollyComplete:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: NotifyPollyComplete
      CodeUri: ./src/ServerlessTextToSpeech.CompletePolly
      Handler: ServerlessTextToSpeech.CompletePolly
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref MetaDataTable
        - SNSCrudPolicy:
            TopicName: !Ref PollyTopic
        - Statement:
            - Sid: StepFunctions
              Effect: Allow
              Action:
                - states:SendTaskSuccess
                - states:SendTaskFailure
                - states:SendTaskHeartbeat
              Resource: "*"
      Events:
        PollyTopicEvent:
          Type: SNS
          Properties:
            Topic: !Ref PollyTopic

  PublishMetaData:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PublishMetaData
      CodeUri: ./src/ServerlessTextToSpeech.PublishMetaData
      Handler: ServerlessTextToSpeech.PublishMetaData
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref SoundBucket
        - !Ref DescribeTablePolicy
        - DynamoDBCrudPolicy:
            TableName: !Ref MetaDataTable

  #S3 buckets
  SourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ["-", ["serverless-source-data", !Ref Environment]]
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
  OutputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ["-", ["serverless-output-data", !Ref Environment]]
  SoundBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ["-", ["serverless-sound-files", !Ref Environment]]

  #Database
  MetaDataTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Join ["-", [!Ref Environment, "TextToSpeechData"]]

  #EventBridge
  NotifyFileUploadedRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Triggers a step function based on an upload to S3"
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - "Object Created"
        detail:
          bucket:
            name:
              - !Ref SourceBucket
      Targets:
        - Arn: !GetAtt ProcessStateMachine.Arn
          RoleArn: !GetAtt StateMachineEventRole.Arn
          Id: stepFunctionExecution

  #Step Functions
  ProcessStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: "TextToSpeechStateMachine"
      Type: STANDARD
      DefinitionUri: ./statemachine.asl.yaml
      DefinitionSubstitutions:
        TextractOutputBucket: !Ref OutputBucket
        SendToTextractFunction: !GetAtt SendToTextract.Arn
        PublishMetadataFunction: !GetAtt PublishMetaData.Arn
        ProcessTextFunction: !GetAtt ProcessTextAndSendToPolly.Arn
        SuccessTopic: !Ref SuccessTopic
        FailureTopic: !Ref FailureTopic
        MetadataTable: !GetAtt MetaDataTable.Arn
        TextractTopic: !Ref TextractTopic
        TextractRole: !GetAtt TextractRole.Arn
      Role: !GetAtt StateMachineRole.Arn

  #Roles and Policies (IAM)
  StateMachineEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: statemachine-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: states:StartExecution
                Resource: !GetAtt ProcessStateMachine.Arn

  #IAM Policy required for using this table with .NET Object Persistence Model. Crud template does not have "describetable"
  DescribeTablePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Join ["-", ["DescribeTablePolicy", !Ref Environment]]
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: dynamodb:DescribeTable
            Resource: !GetAtt MetaDataTable.Arn

  #Role used for the step function
  StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ["-", ["stepfunction-role", !Ref Environment]]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - textract:StartDocumentAnalysis
                Resource: "*"
          PolicyName: TextractExecution
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: PublishSNS
                Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  - !Ref SuccessTopic
                  - !Ref FailureTopic
              - Sid: InvokeLambda
                Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !GetAtt SendToTextract.Arn
                  - !GetAtt PublishMetaData.Arn
                  - !GetAtt ProcessTextAndSendToPolly.Arn
              - Sid: GetSourceData
                Effect: Allow
                Action: s3:Get*
                Resource: !Join ["/", [!GetAtt SourceBucket.Arn, "*"]]
          PolicyName: LambdaExecution

  #Role used for Textract
  TextractRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ["-", ["textract-role", !Ref Environment]]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - textract.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: PublishSns
                Effect: Allow
                Action:
                  - sns:Publish
                Resource:
                  - !Ref TextractTopic
              - Sid: GetSourceData
                Effect: Allow
                Action: s3:Get*
                Resource: !Join ["/", [!GetAtt SourceBucket.Arn, "*"]]
              - Sid: WriteDestinationData
                Effect: Allow
                Action: s3:PutObject
                Resource: !Join ["/", [!GetAtt OutputBucket.Arn, "*"]]
          PolicyName: TextractRole
  #SNS Topics
  TextractTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Join ["-", ["TextractTopic", !Ref Environment]]
      TopicName: !Join ["-", ["TextractNotify", !Ref Environment]]
  PollyTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Join ["-", ["PollyTopic", !Ref Environment]]
      TopicName: !Join ["-", ["PollyNotify", !Ref Environment]]
  SuccessTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Join ["-", ["TextToSpeechSuccess", !Ref Environment]]
      TopicName: !Join ["-", ["TextToSpeechSuccess", !Ref Environment]]
  FailureTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Join ["-", ["TextToSpeechFailure", !Ref Environment]]
      TopicName: !Join ["-", ["TextToSpeechFailure", !Ref Environment]]
